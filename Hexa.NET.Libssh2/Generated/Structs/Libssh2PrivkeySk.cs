// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.Libssh2
{
	/// <summary>
	/// SK signature callback <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "_LIBSSH2_PRIVKEY_SK")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct Libssh2PrivkeySk
	{
		[NativeName(NativeNameType.Field, "algorithm")]
		[NativeName(NativeNameType.Type, "int")]
		public int Algorithm;
		[NativeName(NativeNameType.Field, "flags")]
		[NativeName(NativeNameType.Type, "uint8_t")]
		public byte Flags;
		[NativeName(NativeNameType.Field, "application")]
		[NativeName(NativeNameType.Type, "const char*")]
		public unsafe byte* Application;
		[NativeName(NativeNameType.Field, "key_handle")]
		[NativeName(NativeNameType.Type, "const unsigned char*")]
		public unsafe byte* KeyHandle;
		[NativeName(NativeNameType.Field, "handle_len")]
		[NativeName(NativeNameType.Type, "size_t")]
		public ulong HandleLen;
		[NativeName(NativeNameType.Field, "sign_callback")]
		[NativeName(NativeNameType.Type, "int (*)(LIBSSH2_SESSION* session, LIBSSH2_SK_SIG_INFO* sig_info, const unsigned char* data, size_t data_len, int algorithm, uint8_t flags, const char* application, const unsigned char* key_handle, size_t handle_len, void** abstract)*")]
		public unsafe void* SignCallback;
		[NativeName(NativeNameType.Field, "orig_abstract")]
		[NativeName(NativeNameType.Type, "void**")]
		public unsafe void** OrigAbstract;

		public unsafe Libssh2PrivkeySk(int algorithm = default, byte flags = default, byte* application = default, byte* keyHandle = default, ulong handleLen = default, delegate*<Libssh2Session*, Libssh2SkSigInfo*, byte*, ulong, int, byte, byte*, byte*, ulong, void**, int> signCallback = default, void** origAbstract = default)
		{
			Algorithm = algorithm;
			Flags = flags;
			Application = application;
			KeyHandle = keyHandle;
			HandleLen = handleLen;
			SignCallback = (void*)signCallback;
			OrigAbstract = origAbstract;
		}


	}

}
