// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.Libssh2
{
	[NativeName(NativeNameType.StructOrClass, "libssh2_knownhost")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct Libssh2Knownhost
	{
		/// <summary>
		/// magic stored by the library <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "magic")]
		[NativeName(NativeNameType.Type, "unsigned int")]
		public uint Magic;

		/// <summary>
		/// handle to the internal representation of this host <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "node")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* Node;

		/// <summary>
		/// this is NULL if no plain text host name exists <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "name")]
		[NativeName(NativeNameType.Type, "char*")]
		public unsafe byte* Name;

		/// <summary>
		/// key in base64/printable format <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "key")]
		[NativeName(NativeNameType.Type, "char*")]
		public unsafe byte* Key;

		[NativeName(NativeNameType.Field, "typemask")]
		[NativeName(NativeNameType.Type, "int")]
		public int Typemask;

		public unsafe Libssh2Knownhost(uint magic = default, void* node = default, byte* name = default, byte* key = default, int typemask = default)
		{
			Magic = magic;
			Node = node;
			Name = name;
			Key = key;
			Typemask = typemask;
		}


	}

}
